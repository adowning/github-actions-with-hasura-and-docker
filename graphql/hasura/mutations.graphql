mutation CreateUser($email: String!, $password: String!) {
  insert_users(objects: { email: $email, password: $password }) {
    affected_rows
    returning {
      id
      email
      created_at
    }
  }
}

mutation UpdateUser($id: String!, $active_timesheet_id: String) {
  update_users_by_pk(pk_columns: { id: $id }, _set: { active_timesheet_id: $active_timesheet_id }) {
    id
    active_timesheet_id
  }
}

mutation SetLastSeen($id: String!, $time: timestamptz) {
  update_users_by_pk(pk_columns: { id: $id }, _set: { last_seen: $time }) {
    id
    active_timesheet_id
  }
}

mutation DeleteUserById($id: String!) {
  delete_users(where: { id: { _eq: $id } }) {
    affected_rows
    returning {
      email
      created_at
      updated_at
      id
    }
  }
}

mutation CreateTimesheet($users_id: String!) {
  insert_timesheets(objects: { users_id: $users_id }) {
    affected_rows
    returning {
      # user {
      #   id
      #   email
      # }
      start
      id
    }
  }
}

mutation UpdateTimesheet($id: String!, $end: timestamptz, $start: timestamptz) {
  update_timesheets_by_pk(pk_columns: { id: $id }, _set: { end: $end }) {
    # user {
    #   id
    #   email
    # }
    start
    end
    id
  }
}

# mutation UpdateTimesheet($id: String!, $end: timestamptz, $start: timestamptz) {
#   update_timesheets(
#     where: { id: { _eq: $id } }
#     _set: { end: $end, start: $start }
#   ) {
#     affected_rows
#     returning {
#       id
#       end
#       start
#       user {
#         id
#         email
#         isClockedIn
#       }
#       userId
#     }
#   }
# }
mutation DeleteTimesheetById($id: String!) {
  delete_timesheets(where: { id: { _eq: $id } }) {
    affected_rows
    returning {
      id
      created_at
      updated_at
      # user {
      #   id
      #   email
      # }
    }
  }
}

mutation CreateAccount($account_name: String!) {
  insert_accounts(objects: { account_name: $account_name }) {
    affected_rows
    returning {
      id
      account_name
      created_at
    }
  }
}

mutation UpdateAccount($id: numeric!, $account_name: String) {
  update_accounts_by_pk(pk_columns: { id: $id }, _set: { account_name: $account_name }) {
    id
    account_name
  }
}

mutation DeleteAccountById($id: numeric!) {
  delete_accounts(where: { id: { _eq: $id } }) {
    affected_rows
    returning {
      account_name
      created_at
      updated_at
      id
    }
  }
}
